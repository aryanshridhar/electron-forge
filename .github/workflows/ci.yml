name: CI

on:
  push:
    branches:
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  fast-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
      - name: Fix git checkout line endings
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v2.4.0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 12.x
          cache: yarn
      - name: Install latest NPM on Windows
        if: matrix.os == 'windows-latest'
        # See https://github.com/actions/virtual-environments/issues/4856#issuecomment-1043256330
        # and https://github.com/actions/setup-node/issues/411#issuecomment-1051084491
        run: |
          npm install -g npm@8.3.1
          npm install -g npm@latest
      - name: Install bolt
        shell: bash
        run: |
          case "$(uname -s)" in
            Windows*|CYGWIN*|MINGW*|MSYS*) BOLT_VERSION=0.21.2 ;;
            *) BOLT_VERSION=latest ;;
          esac
          npm install -g bolt@$BOLT_VERSION
      - name: Install
        run: bolt
      - name: Lint
        run: bolt lint
      - name: Build
        run: bolt build
      - name: Run tests
        run: bolt coverage:fast
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.lcov
          env_vars: CI_OS,TEST_TYPE
        env:
          CI_OS: ${{ matrix.os }}
          TEST_TYPE: fast

  slow-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-18.04]
    steps:
      - name: Fix git checkout line endings
        run: git config --global core.autocrlf input
      - uses: actions/checkout@v2.4.0
      - name: Windows specific setup
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          echo 'C:\Program Files (x86)\WiX Toolset v3.11\bin' >> $GITHUB_PATH
          npm config set node-gyp "$GITHUB_WORKSPACE\node_modules\node-gyp\bin\node-gyp.js"
      - name: Linux specific setup
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo add-apt-repository -y ppa:alexlarsson/flatpak
          sudo rm /etc/apt/sources.list.d/bazel.list
          sudo rm /etc/apt/sources.list.d/mongo*.list
          grep -l opensuse /etc/apt/sources.list.d/* | xargs sudo rm
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends snapcraft flatpak-builder elfutils
          ci/install_runtimes.sh
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 12.x
          cache: yarn
      - name: Install bolt
        shell: bash
        run: |
          case "$(uname -s)" in
            Windows*|CYGWIN*|MINGW*|MSYS*) BOLT_VERSION=0.21.2 ;;
            *) BOLT_VERSION=latest ;;
          esac
          npm install -g bolt@$BOLT_VERSION
      - name: Install
        run: bolt
      - name: Build
        run: bolt build
      - name: Test
        run: bolt coverage:slow
        env:
          DEBUG: electron-installer-snap:snapcraft
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: ./coverage.lcov
          env_vars: CI_OS,TEST_TYPE
        env:
          CI_OS: ${{ matrix.os }}
          TEST_TYPE: slow
